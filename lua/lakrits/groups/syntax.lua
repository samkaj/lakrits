local M = {}

function M.highlight(color)
	local c = color
	return {
		Comment = { fg = c.alt_black },
		SpecialComment = { fg = c.alt_green },
		Constant = { fg = c.alt_red },
		String = { fg = c.fg },
		Character = { fg = c.alt_cyan },
		Number = { fg = c.white },
		Float = { fg = c.white },
		Boolean = { fg = c.red },
		Identifier = { fg = c.white },
		Function = { fg = c.cyan },
		Statement = { fg = c.purple },
		Conditional = { fg = c.magenta },
		Repeat = { fg = c.magenta },
		Label = { fg = c.blue },
		Operator = { fg = c.alt_blue },
		Keyword = { fg = c.magenta },
		Exception = { fg = c.blue },
		PreProc = { fg = c.blue },
		Include = { fg = c.purple },
		Define = { fg = c.blue },
		Macro = { fg = c.blue },
		PreCondit = { fg = c.blue },
		StorageClass = { fg = c.dark_cyan },
		Structure = { fg = c.blue },
		Special = { fg = c.magenta },
		Type = { fg = c.alt_blue, bold = true },
		Typedef = { fg = c.alt_blue, bold = true },
		SpecialChar = { fg = c.magenta },
		Tag = { fg = c.alt_magenta },
		Delimiter = { fg = c.blue },
		Debug = { fg = c.magenta },
		Error = { fg = c.red },
		Todo = { fg = c.green, bold = true },
		qfLineNr = { fg = c.purple },
		qfFileName = { fg = c.blue },
		htmlH1 = { fg = c.magenta },
		htmlH2 = { fg = c.alt_magenta },
        DiagnosticError = { fg = color.red },
        DiagnosticWarn = { fg = color.yellow },
        DiagnosticInfo = { fg = color.purple },
        DiagnosticSignError = { fg = color.red },
        DiagnosticUnderlineError = { fg = color.red, undercurl = true },
	}
end

return M
